{{- if .Values.proxyServer.autoGenerateAccessKeys }}
{{- $secretName := .Values.proxyServer.accessKeySecretName }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
{{- /* only attempt to create secret when secret not exists or the existing secret is part of current helm release */}}
{{- if or (empty $secret) (include "magda.isPartOfRelease" (dict "objectData" $secret "root" .) | empty | not) }}
{{- $secretData := (get (get $secret "data" | default dict) "apikeys.json") | default "[]" | fromJsonArray | default list }}
{{- $existingKeySize := len $secretData }}
{{- $requiredKeySize := .Values.proxyServer.autoGenerateAccessKeysNumber }}
{{- $keys := $secretData }}
{{- if lt $existingKeySize $requiredKeySize }}
{{- $times = until (sub $requiredKeySize $existingKeySize) }}
    {{- range $times }}
    {{- append $keys (randAlphaNum 16)}}
    {{- end }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  apikeys.json: {{ $keys | toJson | quote }}
{{- end }}
{{- end }}